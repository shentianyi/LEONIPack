#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Brilliantech.Packaging.Store.Data.StoreModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Leoni_Packaging_prod")]
	public partial class PackagingStoreDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertContainerType(ContainerType instance);
    partial void UpdateContainerType(ContainerType instance);
    partial void DeleteContainerType(ContainerType instance);
    partial void InsertWorkStation(WorkStation instance);
    partial void UpdateWorkStation(WorkStation instance);
    partial void DeleteWorkStation(WorkStation instance);
    partial void InsertPackageItem(PackageItem instance);
    partial void UpdatePackageItem(PackageItem instance);
    partial void DeletePackageItem(PackageItem instance);
    partial void InsertPart(Part instance);
    partial void UpdatePart(Part instance);
    partial void DeletePart(Part instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertSinglePackage(SinglePackage instance);
    partial void UpdateSinglePackage(SinglePackage instance);
    partial void DeleteSinglePackage(SinglePackage instance);
    partial void InsertTrayItem(TrayItem instance);
    partial void UpdateTrayItem(TrayItem instance);
    partial void DeleteTrayItem(TrayItem instance);
    partial void InsertTrays(Trays instance);
    partial void UpdateTrays(Trays instance);
    partial void DeleteTrays(Trays instance);
    partial void InsertProdLine(ProdLine instance);
    partial void UpdateProdLine(ProdLine instance);
    partial void DeleteProdLine(ProdLine instance);
    #endregion
		
		public PackagingStoreDataDataContext() : 
				base(global::Brilliantech.Packaging.Store.Data.Properties.Settings.Default.Leoni_Packaging_prodConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PackagingStoreDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PackagingStoreDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PackagingStoreDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PackagingStoreDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ContainerType> ContainerType
		{
			get
			{
				return this.GetTable<ContainerType>();
			}
		}
		
		public System.Data.Linq.Table<WorkStation> WorkStation
		{
			get
			{
				return this.GetTable<WorkStation>();
			}
		}
		
		public System.Data.Linq.Table<PackageItem> PackageItem
		{
			get
			{
				return this.GetTable<PackageItem>();
			}
		}
		
		public System.Data.Linq.Table<Part> Part
		{
			get
			{
				return this.GetTable<Part>();
			}
		}
		
		public System.Data.Linq.Table<Project> Project
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<SinglePackage> SinglePackage
		{
			get
			{
				return this.GetTable<SinglePackage>();
			}
		}
		
		public System.Data.Linq.Table<TrayItem> TrayItem
		{
			get
			{
				return this.GetTable<TrayItem>();
			}
		}
		
		public System.Data.Linq.Table<TrayPackView> TrayPackView
		{
			get
			{
				return this.GetTable<TrayPackView>();
			}
		}
		
		public System.Data.Linq.Table<HandSinglePackage> HandSinglePackage
		{
			get
			{
				return this.GetTable<HandSinglePackage>();
			}
		}
		
		public System.Data.Linq.Table<Trays> Trays
		{
			get
			{
				return this.GetTable<Trays>();
			}
		}
		
		public System.Data.Linq.Table<ProdLine> ProdLine
		{
			get
			{
				return this.GetTable<ProdLine>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContainerType")]
	public partial class ContainerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _containerID;
		
		private string _containerName;
		
		private string _containerDesc;
		
		private double _long;
		
		private double _width;
		
		private double _height;
		
		private bool _reusable;
		
		private double _weight;
		
		private int _status;
		
		private System.Guid _rowguid;
		
		private EntitySet<SinglePackage> _SinglePackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontainerIDChanging(string value);
    partial void OncontainerIDChanged();
    partial void OncontainerNameChanging(string value);
    partial void OncontainerNameChanged();
    partial void OncontainerDescChanging(string value);
    partial void OncontainerDescChanged();
    partial void OnlongChanging(double value);
    partial void OnlongChanged();
    partial void OnwidthChanging(double value);
    partial void OnwidthChanged();
    partial void OnheightChanging(double value);
    partial void OnheightChanged();
    partial void OnreusableChanging(bool value);
    partial void OnreusableChanged();
    partial void OnweightChanging(double value);
    partial void OnweightChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public ContainerType()
		{
			this._SinglePackage = new EntitySet<SinglePackage>(new Action<SinglePackage>(this.attach_SinglePackage), new Action<SinglePackage>(this.detach_SinglePackage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_containerID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string containerID
		{
			get
			{
				return this._containerID;
			}
			set
			{
				if ((this._containerID != value))
				{
					this.OncontainerIDChanging(value);
					this.SendPropertyChanging();
					this._containerID = value;
					this.SendPropertyChanged("containerID");
					this.OncontainerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_containerName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string containerName
		{
			get
			{
				return this._containerName;
			}
			set
			{
				if ((this._containerName != value))
				{
					this.OncontainerNameChanging(value);
					this.SendPropertyChanging();
					this._containerName = value;
					this.SendPropertyChanged("containerName");
					this.OncontainerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_containerDesc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string containerDesc
		{
			get
			{
				return this._containerDesc;
			}
			set
			{
				if ((this._containerDesc != value))
				{
					this.OncontainerDescChanging(value);
					this.SendPropertyChanging();
					this._containerDesc = value;
					this.SendPropertyChanged("containerDesc");
					this.OncontainerDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="long", Storage="_long", DbType="Float NOT NULL")]
		public double @long
		{
			get
			{
				return this._long;
			}
			set
			{
				if ((this._long != value))
				{
					this.OnlongChanging(value);
					this.SendPropertyChanging();
					this._long = value;
					this.SendPropertyChanged("@long");
					this.OnlongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Float NOT NULL")]
		public double width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="Float NOT NULL")]
		public double height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reusable", DbType="Bit NOT NULL")]
		public bool reusable
		{
			get
			{
				return this._reusable;
			}
			set
			{
				if ((this._reusable != value))
				{
					this.OnreusableChanging(value);
					this.SendPropertyChanging();
					this._reusable = value;
					this.SendPropertyChanged("reusable");
					this.OnreusableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Float NOT NULL")]
		public double weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContainerType_SinglePackage", Storage="_SinglePackage", ThisKey="containerID", OtherKey="containerID")]
		public EntitySet<SinglePackage> SinglePackage
		{
			get
			{
				return this._SinglePackage;
			}
			set
			{
				this._SinglePackage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinglePackage(SinglePackage entity)
		{
			this.SendPropertyChanging();
			entity.ContainerType = this;
		}
		
		private void detach_SinglePackage(SinglePackage entity)
		{
			this.SendPropertyChanging();
			entity.ContainerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkStation")]
	public partial class WorkStation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _wrkStnID;
		
		private string _wrkStnName;
		
		private byte _status;
		
		private string _prodLineID;
		
		private System.Guid _rowguid;
		
		private EntitySet<SinglePackage> _SinglePackage;
		
		private EntityRef<ProdLine> _ProdLine;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnwrkStnIDChanging(string value);
    partial void OnwrkStnIDChanged();
    partial void OnwrkStnNameChanging(string value);
    partial void OnwrkStnNameChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnprodLineIDChanging(string value);
    partial void OnprodLineIDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public WorkStation()
		{
			this._SinglePackage = new EntitySet<SinglePackage>(new Action<SinglePackage>(this.attach_SinglePackage), new Action<SinglePackage>(this.detach_SinglePackage));
			this._ProdLine = default(EntityRef<ProdLine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wrkStnID", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string wrkStnID
		{
			get
			{
				return this._wrkStnID;
			}
			set
			{
				if ((this._wrkStnID != value))
				{
					this.OnwrkStnIDChanging(value);
					this.SendPropertyChanging();
					this._wrkStnID = value;
					this.SendPropertyChanged("wrkStnID");
					this.OnwrkStnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wrkStnName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string wrkStnName
		{
			get
			{
				return this._wrkStnName;
			}
			set
			{
				if ((this._wrkStnName != value))
				{
					this.OnwrkStnNameChanging(value);
					this.SendPropertyChanging();
					this._wrkStnName = value;
					this.SendPropertyChanged("wrkStnName");
					this.OnwrkStnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prodLineID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string prodLineID
		{
			get
			{
				return this._prodLineID;
			}
			set
			{
				if ((this._prodLineID != value))
				{
					if (this._ProdLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprodLineIDChanging(value);
					this.SendPropertyChanging();
					this._prodLineID = value;
					this.SendPropertyChanged("prodLineID");
					this.OnprodLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkStation_SinglePackage", Storage="_SinglePackage", ThisKey="wrkStnID", OtherKey="wrkstnID")]
		public EntitySet<SinglePackage> SinglePackage
		{
			get
			{
				return this._SinglePackage;
			}
			set
			{
				this._SinglePackage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProdLine_WorkStation", Storage="_ProdLine", ThisKey="prodLineID", OtherKey="prodLineID", IsForeignKey=true)]
		public ProdLine ProdLine
		{
			get
			{
				return this._ProdLine.Entity;
			}
			set
			{
				ProdLine previousValue = this._ProdLine.Entity;
				if (((previousValue != value) 
							|| (this._ProdLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProdLine.Entity = null;
						previousValue.WorkStation.Remove(this);
					}
					this._ProdLine.Entity = value;
					if ((value != null))
					{
						value.WorkStation.Add(this);
						this._prodLineID = value.prodLineID;
					}
					else
					{
						this._prodLineID = default(string);
					}
					this.SendPropertyChanged("ProdLine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinglePackage(SinglePackage entity)
		{
			this.SendPropertyChanging();
			entity.WorkStation = this;
		}
		
		private void detach_SinglePackage(SinglePackage entity)
		{
			this.SendPropertyChanging();
			entity.WorkStation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackageItem")]
	public partial class PackageItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _itemUid;
		
		private int _itemSeq;
		
		private string _TNr;
		
		private System.DateTime _packagingTime;
		
		private string _packageID;
		
		private System.Guid _rowguid;
		
		private EntityRef<SinglePackage> _SinglePackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemUidChanging(System.Guid value);
    partial void OnitemUidChanged();
    partial void OnitemSeqChanging(int value);
    partial void OnitemSeqChanged();
    partial void OnTNrChanging(string value);
    partial void OnTNrChanged();
    partial void OnpackagingTimeChanging(System.DateTime value);
    partial void OnpackagingTimeChanged();
    partial void OnpackageIDChanging(string value);
    partial void OnpackageIDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public PackageItem()
		{
			this._SinglePackage = default(EntityRef<SinglePackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemUid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid itemUid
		{
			get
			{
				return this._itemUid;
			}
			set
			{
				if ((this._itemUid != value))
				{
					this.OnitemUidChanging(value);
					this.SendPropertyChanging();
					this._itemUid = value;
					this.SendPropertyChanged("itemUid");
					this.OnitemUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemSeq", DbType="Int NOT NULL")]
		public int itemSeq
		{
			get
			{
				return this._itemSeq;
			}
			set
			{
				if ((this._itemSeq != value))
				{
					this.OnitemSeqChanging(value);
					this.SendPropertyChanging();
					this._itemSeq = value;
					this.SendPropertyChanged("itemSeq");
					this.OnitemSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TNr
		{
			get
			{
				return this._TNr;
			}
			set
			{
				if ((this._TNr != value))
				{
					this.OnTNrChanging(value);
					this.SendPropertyChanging();
					this._TNr = value;
					this.SendPropertyChanged("TNr");
					this.OnTNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packagingTime", DbType="DateTime NOT NULL")]
		public System.DateTime packagingTime
		{
			get
			{
				return this._packagingTime;
			}
			set
			{
				if ((this._packagingTime != value))
				{
					this.OnpackagingTimeChanging(value);
					this.SendPropertyChanging();
					this._packagingTime = value;
					this.SendPropertyChanged("packagingTime");
					this.OnpackagingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string packageID
		{
			get
			{
				return this._packageID;
			}
			set
			{
				if ((this._packageID != value))
				{
					if (this._SinglePackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpackageIDChanging(value);
					this.SendPropertyChanging();
					this._packageID = value;
					this.SendPropertyChanged("packageID");
					this.OnpackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinglePackage_PackageItem", Storage="_SinglePackage", ThisKey="packageID", OtherKey="packageID", IsForeignKey=true)]
		public SinglePackage SinglePackage
		{
			get
			{
				return this._SinglePackage.Entity;
			}
			set
			{
				SinglePackage previousValue = this._SinglePackage.Entity;
				if (((previousValue != value) 
							|| (this._SinglePackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinglePackage.Entity = null;
						previousValue.PackageItem.Remove(this);
					}
					this._SinglePackage.Entity = value;
					if ((value != null))
					{
						value.PackageItem.Add(this);
						this._packageID = value.packageID;
					}
					else
					{
						this._packageID = default(string);
					}
					this.SendPropertyChanged("SinglePackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Part")]
	public partial class Part : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _partNr;
		
		private string _partName;
		
		private string _customerPartNr;
		
		private string _projectID;
		
		private string _customerPCR;
		
		private System.Guid _rowguid;
		
		private EntitySet<SinglePackage> _SinglePackage;
		
		private EntityRef<Project> _Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpartNrChanging(string value);
    partial void OnpartNrChanged();
    partial void OnpartNameChanging(string value);
    partial void OnpartNameChanged();
    partial void OncustomerPartNrChanging(string value);
    partial void OncustomerPartNrChanged();
    partial void OnprojectIDChanging(string value);
    partial void OnprojectIDChanged();
    partial void OncustomerPCRChanging(string value);
    partial void OncustomerPCRChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public Part()
		{
			this._SinglePackage = new EntitySet<SinglePackage>(new Action<SinglePackage>(this.attach_SinglePackage), new Action<SinglePackage>(this.detach_SinglePackage));
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partNr", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string partNr
		{
			get
			{
				return this._partNr;
			}
			set
			{
				if ((this._partNr != value))
				{
					this.OnpartNrChanging(value);
					this.SendPropertyChanging();
					this._partNr = value;
					this.SendPropertyChanged("partNr");
					this.OnpartNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string partName
		{
			get
			{
				return this._partName;
			}
			set
			{
				if ((this._partName != value))
				{
					this.OnpartNameChanging(value);
					this.SendPropertyChanging();
					this._partName = value;
					this.SendPropertyChanged("partName");
					this.OnpartNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerPartNr", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string customerPartNr
		{
			get
			{
				return this._customerPartNr;
			}
			set
			{
				if ((this._customerPartNr != value))
				{
					this.OncustomerPartNrChanging(value);
					this.SendPropertyChanging();
					this._customerPartNr = value;
					this.SendPropertyChanged("customerPartNr");
					this.OncustomerPartNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string projectID
		{
			get
			{
				return this._projectID;
			}
			set
			{
				if ((this._projectID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIDChanging(value);
					this.SendPropertyChanging();
					this._projectID = value;
					this.SendPropertyChanged("projectID");
					this.OnprojectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerPCR", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string customerPCR
		{
			get
			{
				return this._customerPCR;
			}
			set
			{
				if ((this._customerPCR != value))
				{
					this.OncustomerPCRChanging(value);
					this.SendPropertyChanging();
					this._customerPCR = value;
					this.SendPropertyChanged("customerPCR");
					this.OncustomerPCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_SinglePackage", Storage="_SinglePackage", ThisKey="partNr", OtherKey="partNr")]
		public EntitySet<SinglePackage> SinglePackage
		{
			get
			{
				return this._SinglePackage;
			}
			set
			{
				this._SinglePackage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Part", Storage="_Project", ThisKey="projectID", OtherKey="projectID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Part.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Part.Add(this);
						this._projectID = value.projectID;
					}
					else
					{
						this._projectID = default(string);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinglePackage(SinglePackage entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_SinglePackage(SinglePackage entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _projectID;
		
		private string _projectName;
		
		private System.Guid _rowguid;
		
		private EntitySet<Part> _Part;
		
		private EntitySet<ProdLine> _ProdLine;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectIDChanging(string value);
    partial void OnprojectIDChanged();
    partial void OnprojectNameChanging(string value);
    partial void OnprojectNameChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public Project()
		{
			this._Part = new EntitySet<Part>(new Action<Part>(this.attach_Part), new Action<Part>(this.detach_Part));
			this._ProdLine = new EntitySet<ProdLine>(new Action<ProdLine>(this.attach_ProdLine), new Action<ProdLine>(this.detach_ProdLine));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string projectID
		{
			get
			{
				return this._projectID;
			}
			set
			{
				if ((this._projectID != value))
				{
					this.OnprojectIDChanging(value);
					this.SendPropertyChanging();
					this._projectID = value;
					this.SendPropertyChanged("projectID");
					this.OnprojectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string projectName
		{
			get
			{
				return this._projectName;
			}
			set
			{
				if ((this._projectName != value))
				{
					this.OnprojectNameChanging(value);
					this.SendPropertyChanging();
					this._projectName = value;
					this.SendPropertyChanged("projectName");
					this.OnprojectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Part", Storage="_Part", ThisKey="projectID", OtherKey="projectID")]
		public EntitySet<Part> Part
		{
			get
			{
				return this._Part;
			}
			set
			{
				this._Part.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProdLine", Storage="_ProdLine", ThisKey="projectID", OtherKey="projectID")]
		public EntitySet<ProdLine> ProdLine
		{
			get
			{
				return this._ProdLine;
			}
			set
			{
				this._ProdLine.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Part(Part entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Part(Part entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProdLine(ProdLine entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProdLine(ProdLine entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinglePackage")]
	public partial class SinglePackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _packageID;
		
		private int _capa;
		
		private byte _status;
		
		private string _containerID;
		
		private System.DateTime _planedDate;
		
		private string _partNr;
		
		private string _wrkstnID;
		
		private System.Guid _rowguid;
		
		private EntitySet<PackageItem> _PackageItem;
		
		private EntitySet<TrayItem> _TrayItem;
		
		private EntityRef<ContainerType> _ContainerType;
		
		private EntityRef<Part> _Part;
		
		private EntityRef<WorkStation> _WorkStation;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpackageIDChanging(string value);
    partial void OnpackageIDChanged();
    partial void OncapaChanging(int value);
    partial void OncapaChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OncontainerIDChanging(string value);
    partial void OncontainerIDChanged();
    partial void OnplanedDateChanging(System.DateTime value);
    partial void OnplanedDateChanged();
    partial void OnpartNrChanging(string value);
    partial void OnpartNrChanged();
    partial void OnwrkstnIDChanging(string value);
    partial void OnwrkstnIDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public SinglePackage()
		{
			this._PackageItem = new EntitySet<PackageItem>(new Action<PackageItem>(this.attach_PackageItem), new Action<PackageItem>(this.detach_PackageItem));
			this._TrayItem = new EntitySet<TrayItem>(new Action<TrayItem>(this.attach_TrayItem), new Action<TrayItem>(this.detach_TrayItem));
			this._ContainerType = default(EntityRef<ContainerType>);
			this._Part = default(EntityRef<Part>);
			this._WorkStation = default(EntityRef<WorkStation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string packageID
		{
			get
			{
				return this._packageID;
			}
			set
			{
				if ((this._packageID != value))
				{
					this.OnpackageIDChanging(value);
					this.SendPropertyChanging();
					this._packageID = value;
					this.SendPropertyChanged("packageID");
					this.OnpackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capa", DbType="Int NOT NULL")]
		public int capa
		{
			get
			{
				return this._capa;
			}
			set
			{
				if ((this._capa != value))
				{
					this.OncapaChanging(value);
					this.SendPropertyChanging();
					this._capa = value;
					this.SendPropertyChanged("capa");
					this.OncapaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_containerID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string containerID
		{
			get
			{
				return this._containerID;
			}
			set
			{
				if ((this._containerID != value))
				{
					if (this._ContainerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontainerIDChanging(value);
					this.SendPropertyChanging();
					this._containerID = value;
					this.SendPropertyChanged("containerID");
					this.OncontainerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_planedDate", DbType="Date NOT NULL")]
		public System.DateTime planedDate
		{
			get
			{
				return this._planedDate;
			}
			set
			{
				if ((this._planedDate != value))
				{
					this.OnplanedDateChanging(value);
					this.SendPropertyChanging();
					this._planedDate = value;
					this.SendPropertyChanged("planedDate");
					this.OnplanedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partNr", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string partNr
		{
			get
			{
				return this._partNr;
			}
			set
			{
				if ((this._partNr != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartNrChanging(value);
					this.SendPropertyChanging();
					this._partNr = value;
					this.SendPropertyChanged("partNr");
					this.OnpartNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wrkstnID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string wrkstnID
		{
			get
			{
				return this._wrkstnID;
			}
			set
			{
				if ((this._wrkstnID != value))
				{
					if (this._WorkStation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwrkstnIDChanging(value);
					this.SendPropertyChanging();
					this._wrkstnID = value;
					this.SendPropertyChanged("wrkstnID");
					this.OnwrkstnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinglePackage_PackageItem", Storage="_PackageItem", ThisKey="packageID", OtherKey="packageID")]
		public EntitySet<PackageItem> PackageItem
		{
			get
			{
				return this._PackageItem;
			}
			set
			{
				this._PackageItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinglePackage_TrayItem", Storage="_TrayItem", ThisKey="packageID", OtherKey="packageId")]
		public EntitySet<TrayItem> TrayItem
		{
			get
			{
				return this._TrayItem;
			}
			set
			{
				this._TrayItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContainerType_SinglePackage", Storage="_ContainerType", ThisKey="containerID", OtherKey="containerID", IsForeignKey=true)]
		public ContainerType ContainerType
		{
			get
			{
				return this._ContainerType.Entity;
			}
			set
			{
				ContainerType previousValue = this._ContainerType.Entity;
				if (((previousValue != value) 
							|| (this._ContainerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContainerType.Entity = null;
						previousValue.SinglePackage.Remove(this);
					}
					this._ContainerType.Entity = value;
					if ((value != null))
					{
						value.SinglePackage.Add(this);
						this._containerID = value.containerID;
					}
					else
					{
						this._containerID = default(string);
					}
					this.SendPropertyChanged("ContainerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_SinglePackage", Storage="_Part", ThisKey="partNr", OtherKey="partNr", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.SinglePackage.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.SinglePackage.Add(this);
						this._partNr = value.partNr;
					}
					else
					{
						this._partNr = default(string);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkStation_SinglePackage", Storage="_WorkStation", ThisKey="wrkstnID", OtherKey="wrkStnID", IsForeignKey=true)]
		public WorkStation WorkStation
		{
			get
			{
				return this._WorkStation.Entity;
			}
			set
			{
				WorkStation previousValue = this._WorkStation.Entity;
				if (((previousValue != value) 
							|| (this._WorkStation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkStation.Entity = null;
						previousValue.SinglePackage.Remove(this);
					}
					this._WorkStation.Entity = value;
					if ((value != null))
					{
						value.SinglePackage.Add(this);
						this._wrkstnID = value.wrkStnID;
					}
					else
					{
						this._wrkstnID = default(string);
					}
					this.SendPropertyChanged("WorkStation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackageItem(PackageItem entity)
		{
			this.SendPropertyChanging();
			entity.SinglePackage = this;
		}
		
		private void detach_PackageItem(PackageItem entity)
		{
			this.SendPropertyChanging();
			entity.SinglePackage = null;
		}
		
		private void attach_TrayItem(TrayItem entity)
		{
			this.SendPropertyChanging();
			entity.SinglePackage = this;
		}
		
		private void detach_TrayItem(TrayItem entity)
		{
			this.SendPropertyChanging();
			entity.SinglePackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrayItem")]
	public partial class TrayItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _itemId;
		
		private string _packageId;
		
		private string _trayId;
		
		private System.Guid _rowguid;
		
		private EntityRef<SinglePackage> _SinglePackage;
		
		private EntityRef<Trays> _Trays;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIdChanging(System.Guid value);
    partial void OnitemIdChanged();
    partial void OnpackageIdChanging(string value);
    partial void OnpackageIdChanged();
    partial void OntrayIdChanging(string value);
    partial void OntrayIdChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public TrayItem()
		{
			this._SinglePackage = default(EntityRef<SinglePackage>);
			this._Trays = default(EntityRef<Trays>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string packageId
		{
			get
			{
				return this._packageId;
			}
			set
			{
				if ((this._packageId != value))
				{
					if (this._SinglePackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpackageIdChanging(value);
					this.SendPropertyChanging();
					this._packageId = value;
					this.SendPropertyChanged("packageId");
					this.OnpackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trayId", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string trayId
		{
			get
			{
				return this._trayId;
			}
			set
			{
				if ((this._trayId != value))
				{
					if (this._Trays.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntrayIdChanging(value);
					this.SendPropertyChanging();
					this._trayId = value;
					this.SendPropertyChanged("trayId");
					this.OntrayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinglePackage_TrayItem", Storage="_SinglePackage", ThisKey="packageId", OtherKey="packageID", IsForeignKey=true)]
		public SinglePackage SinglePackage
		{
			get
			{
				return this._SinglePackage.Entity;
			}
			set
			{
				SinglePackage previousValue = this._SinglePackage.Entity;
				if (((previousValue != value) 
							|| (this._SinglePackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinglePackage.Entity = null;
						previousValue.TrayItem.Remove(this);
					}
					this._SinglePackage.Entity = value;
					if ((value != null))
					{
						value.TrayItem.Add(this);
						this._packageId = value.packageID;
					}
					else
					{
						this._packageId = default(string);
					}
					this.SendPropertyChanged("SinglePackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trays_TrayItem", Storage="_Trays", ThisKey="trayId", OtherKey="trayId", IsForeignKey=true)]
		public Trays Trays
		{
			get
			{
				return this._Trays.Entity;
			}
			set
			{
				Trays previousValue = this._Trays.Entity;
				if (((previousValue != value) 
							|| (this._Trays.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trays.Entity = null;
						previousValue.TrayItem.Remove(this);
					}
					this._Trays.Entity = value;
					if ((value != null))
					{
						value.TrayItem.Add(this);
						this._trayId = value.trayId;
					}
					else
					{
						this._trayId = default(string);
					}
					this.SendPropertyChanged("Trays");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrayPackView")]
	public partial class TrayPackView
	{
		
		private string _packageID;
		
		private int _capa;
		
		private byte _spsatus;
		
		private string _partNr;
		
		private string _trayId;
		
		private int _tstatus;
		
		private string _position;
		
		private string _warehouse;
		
		private System.DateTime _createTime;
		
		private string _customerPartNr;
		
		public TrayPackView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string packageID
		{
			get
			{
				return this._packageID;
			}
			set
			{
				if ((this._packageID != value))
				{
					this._packageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capa", DbType="Int NOT NULL")]
		public int capa
		{
			get
			{
				return this._capa;
			}
			set
			{
				if ((this._capa != value))
				{
					this._capa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spsatus", DbType="TinyInt NOT NULL")]
		public byte spsatus
		{
			get
			{
				return this._spsatus;
			}
			set
			{
				if ((this._spsatus != value))
				{
					this._spsatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partNr", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string partNr
		{
			get
			{
				return this._partNr;
			}
			set
			{
				if ((this._partNr != value))
				{
					this._partNr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trayId", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string trayId
		{
			get
			{
				return this._trayId;
			}
			set
			{
				if ((this._trayId != value))
				{
					this._trayId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tstatus", DbType="Int NOT NULL")]
		public int tstatus
		{
			get
			{
				return this._tstatus;
			}
			set
			{
				if ((this._tstatus != value))
				{
					this._tstatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this._position = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouse", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string warehouse
		{
			get
			{
				return this._warehouse;
			}
			set
			{
				if ((this._warehouse != value))
				{
					this._warehouse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createTime", DbType="DateTime NOT NULL")]
		public System.DateTime createTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this._createTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerPartNr", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string customerPartNr
		{
			get
			{
				return this._customerPartNr;
			}
			set
			{
				if ((this._customerPartNr != value))
				{
					this._customerPartNr = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HandSinglePackage")]
	public partial class HandSinglePackage
	{
		
		private string _packageID;
		
		private System.Nullable<int> _capa;
		
		private System.Nullable<byte> _status;
		
		private string _partNr;
		
		private System.Nullable<System.Guid> _rowguid;
		
		private string _projectID;
		
		private string _cusPartNr;
		
		private System.Nullable<System.DateTime> _createDate;
		
		public HandSinglePackage()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string packageID
		{
			get
			{
				return this._packageID;
			}
			set
			{
				if ((this._packageID != value))
				{
					this._packageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capa", DbType="Int")]
		public System.Nullable<int> capa
		{
			get
			{
				return this._capa;
			}
			set
			{
				if ((this._capa != value))
				{
					this._capa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt")]
		public System.Nullable<byte> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partNr", DbType="VarChar(50)")]
		public string partNr
		{
			get
			{
				return this._partNr;
			}
			set
			{
				if ((this._partNr != value))
				{
					this._partNr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this._rowguid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectID", DbType="VarChar(50)")]
		public string projectID
		{
			get
			{
				return this._projectID;
			}
			set
			{
				if ((this._projectID != value))
				{
					this._projectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusPartNr", DbType="VarChar(50)")]
		public string cusPartNr
		{
			get
			{
				return this._cusPartNr;
			}
			set
			{
				if ((this._cusPartNr != value))
				{
					this._cusPartNr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="Date")]
		public System.Nullable<System.DateTime> createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this._createDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trays")]
	public partial class Trays : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _trayId;
		
		private System.DateTime _createTime;
		
		private string _warehouse;
		
		private string _position;
		
		private int _status;
		
		private System.Guid _rowguid;
		
		private System.Nullable<bool> _sync;
		
		private EntitySet<TrayItem> _TrayItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntrayIdChanging(string value);
    partial void OntrayIdChanged();
    partial void OncreateTimeChanging(System.DateTime value);
    partial void OncreateTimeChanged();
    partial void OnwarehouseChanging(string value);
    partial void OnwarehouseChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnsyncChanging(System.Nullable<bool> value);
    partial void OnsyncChanged();
    #endregion
		
		public Trays()
		{
			this._TrayItem = new EntitySet<TrayItem>(new Action<TrayItem>(this.attach_TrayItem), new Action<TrayItem>(this.detach_TrayItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trayId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string trayId
		{
			get
			{
				return this._trayId;
			}
			set
			{
				if ((this._trayId != value))
				{
					this.OntrayIdChanging(value);
					this.SendPropertyChanging();
					this._trayId = value;
					this.SendPropertyChanged("trayId");
					this.OntrayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createTime", DbType="DateTime NOT NULL")]
		public System.DateTime createTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				if ((this._createTime != value))
				{
					this.OncreateTimeChanging(value);
					this.SendPropertyChanging();
					this._createTime = value;
					this.SendPropertyChanged("createTime");
					this.OncreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouse", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string warehouse
		{
			get
			{
				return this._warehouse;
			}
			set
			{
				if ((this._warehouse != value))
				{
					this.OnwarehouseChanging(value);
					this.SendPropertyChanging();
					this._warehouse = value;
					this.SendPropertyChanged("warehouse");
					this.OnwarehouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sync", DbType="Bit")]
		public System.Nullable<bool> sync
		{
			get
			{
				return this._sync;
			}
			set
			{
				if ((this._sync != value))
				{
					this.OnsyncChanging(value);
					this.SendPropertyChanging();
					this._sync = value;
					this.SendPropertyChanged("sync");
					this.OnsyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trays_TrayItem", Storage="_TrayItem", ThisKey="trayId", OtherKey="trayId")]
		public EntitySet<TrayItem> TrayItem
		{
			get
			{
				return this._TrayItem;
			}
			set
			{
				this._TrayItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrayItem(TrayItem entity)
		{
			this.SendPropertyChanging();
			entity.Trays = this;
		}
		
		private void detach_TrayItem(TrayItem entity)
		{
			this.SendPropertyChanging();
			entity.Trays = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProdLine")]
	public partial class ProdLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _prodLineID;
		
		private string _prodLineName;
		
		private string _projectID;
		
		private System.Guid _rowguid;
		
		private EntitySet<WorkStation> _WorkStation;
		
		private EntityRef<Project> _Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprodLineIDChanging(string value);
    partial void OnprodLineIDChanged();
    partial void OnprodLineNameChanging(string value);
    partial void OnprodLineNameChanged();
    partial void OnprojectIDChanging(string value);
    partial void OnprojectIDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public ProdLine()
		{
			this._WorkStation = new EntitySet<WorkStation>(new Action<WorkStation>(this.attach_WorkStation), new Action<WorkStation>(this.detach_WorkStation));
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prodLineID", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string prodLineID
		{
			get
			{
				return this._prodLineID;
			}
			set
			{
				if ((this._prodLineID != value))
				{
					this.OnprodLineIDChanging(value);
					this.SendPropertyChanging();
					this._prodLineID = value;
					this.SendPropertyChanged("prodLineID");
					this.OnprodLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prodLineName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string prodLineName
		{
			get
			{
				return this._prodLineName;
			}
			set
			{
				if ((this._prodLineName != value))
				{
					this.OnprodLineNameChanging(value);
					this.SendPropertyChanging();
					this._prodLineName = value;
					this.SendPropertyChanged("prodLineName");
					this.OnprodLineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string projectID
		{
			get
			{
				return this._projectID;
			}
			set
			{
				if ((this._projectID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIDChanging(value);
					this.SendPropertyChanging();
					this._projectID = value;
					this.SendPropertyChanged("projectID");
					this.OnprojectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProdLine_WorkStation", Storage="_WorkStation", ThisKey="prodLineID", OtherKey="prodLineID")]
		public EntitySet<WorkStation> WorkStation
		{
			get
			{
				return this._WorkStation;
			}
			set
			{
				this._WorkStation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProdLine", Storage="_Project", ThisKey="projectID", OtherKey="projectID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProdLine.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProdLine.Add(this);
						this._projectID = value.projectID;
					}
					else
					{
						this._projectID = default(string);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkStation(WorkStation entity)
		{
			this.SendPropertyChanging();
			entity.ProdLine = this;
		}
		
		private void detach_WorkStation(WorkStation entity)
		{
			this.SendPropertyChanging();
			entity.ProdLine = null;
		}
	}
}
#pragma warning restore 1591
