'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行时版本:4.0.30319.1
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="package")>  _
Partial Public Class PackagingDataDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "可扩展性方法定义"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertContainerType(instance As ContainerType)
    End Sub
  Partial Private Sub UpdateContainerType(instance As ContainerType)
    End Sub
  Partial Private Sub DeleteContainerType(instance As ContainerType)
    End Sub
  Partial Private Sub InsertCustomValidate(instance As CustomValidate)
    End Sub
  Partial Private Sub UpdateCustomValidate(instance As CustomValidate)
    End Sub
  Partial Private Sub DeleteCustomValidate(instance As CustomValidate)
    End Sub
  Partial Private Sub InsertPart(instance As Part)
    End Sub
  Partial Private Sub UpdatePart(instance As Part)
    End Sub
  Partial Private Sub DeletePart(instance As Part)
    End Sub
  Partial Private Sub InsertPartAllowedSec(instance As PartAllowedSec)
    End Sub
  Partial Private Sub UpdatePartAllowedSec(instance As PartAllowedSec)
    End Sub
  Partial Private Sub DeletePartAllowedSec(instance As PartAllowedSec)
    End Sub
  Partial Private Sub InsertPartContainerLabel(instance As PartContainerLabel)
    End Sub
  Partial Private Sub UpdatePartContainerLabel(instance As PartContainerLabel)
    End Sub
  Partial Private Sub DeletePartContainerLabel(instance As PartContainerLabel)
    End Sub
  Partial Private Sub InsertProdLine(instance As ProdLine)
    End Sub
  Partial Private Sub UpdateProdLine(instance As ProdLine)
    End Sub
  Partial Private Sub DeleteProdLine(instance As ProdLine)
    End Sub
  Partial Private Sub InsertProject(instance As Project)
    End Sub
  Partial Private Sub UpdateProject(instance As Project)
    End Sub
  Partial Private Sub DeleteProject(instance As Project)
    End Sub
  Partial Private Sub InsertSinglePackage(instance As SinglePackage)
    End Sub
  Partial Private Sub UpdateSinglePackage(instance As SinglePackage)
    End Sub
  Partial Private Sub DeleteSinglePackage(instance As SinglePackage)
    End Sub
  Partial Private Sub InsertSourceBarcode(instance As SourceBarcode)
    End Sub
  Partial Private Sub UpdateSourceBarcode(instance As SourceBarcode)
    End Sub
  Partial Private Sub DeleteSourceBarcode(instance As SourceBarcode)
    End Sub
  Partial Private Sub InsertWorkStation(instance As WorkStation)
    End Sub
  Partial Private Sub UpdateWorkStation(instance As WorkStation)
    End Sub
  Partial Private Sub DeleteWorkStation(instance As WorkStation)
    End Sub
  #End Region
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ContainerTypes() As System.Data.Linq.Table(Of ContainerType)
		Get
			Return Me.GetTable(Of ContainerType)
		End Get
	End Property
	
	Public ReadOnly Property CustomValidates() As System.Data.Linq.Table(Of CustomValidate)
		Get
			Return Me.GetTable(Of CustomValidate)
		End Get
	End Property
	
	Public ReadOnly Property Parts() As System.Data.Linq.Table(Of Part)
		Get
			Return Me.GetTable(Of Part)
		End Get
	End Property
	
	Public ReadOnly Property PartAllowedSecs() As System.Data.Linq.Table(Of PartAllowedSec)
		Get
			Return Me.GetTable(Of PartAllowedSec)
		End Get
	End Property
	
	Public ReadOnly Property PartContainerLabels() As System.Data.Linq.Table(Of PartContainerLabel)
		Get
			Return Me.GetTable(Of PartContainerLabel)
		End Get
	End Property
	
	Public ReadOnly Property ProdLines() As System.Data.Linq.Table(Of ProdLine)
		Get
			Return Me.GetTable(Of ProdLine)
		End Get
	End Property
	
	Public ReadOnly Property Projects() As System.Data.Linq.Table(Of Project)
		Get
			Return Me.GetTable(Of Project)
		End Get
	End Property
	
	Public ReadOnly Property SinglePackages() As System.Data.Linq.Table(Of SinglePackage)
		Get
			Return Me.GetTable(Of SinglePackage)
		End Get
	End Property
	
	Public ReadOnly Property SourceBarcodes() As System.Data.Linq.Table(Of SourceBarcode)
		Get
			Return Me.GetTable(Of SourceBarcode)
		End Get
	End Property
	
	Public ReadOnly Property WorkStations() As System.Data.Linq.Table(Of WorkStation)
		Get
			Return Me.GetTable(Of WorkStation)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class ContainerType
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ContainerID As String
	
	Private _ContainerName As String
	
	Private _ContainerDesc As String
	
	Private _Long As Double
	
	Private _Width As Double
	
	Private _Height As Double
	
	Private _Reusable As Boolean
	
	Private _Weight As Double
	
	Private _Status As Integer
	
	Private _Rowguid As System.Guid
	
    #Region "可扩展性方法定义"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnContainerIDChanging(value As String)
    End Sub
    Partial Private Sub OnContainerIDChanged()
    End Sub
    Partial Private Sub OnContainerNameChanging(value As String)
    End Sub
    Partial Private Sub OnContainerNameChanged()
    End Sub
    Partial Private Sub OnContainerDescChanging(value As String)
    End Sub
    Partial Private Sub OnContainerDescChanged()
    End Sub
    Partial Private Sub OnLongChanging(value As Double)
    End Sub
    Partial Private Sub OnLongChanged()
    End Sub
    Partial Private Sub OnWidthChanging(value As Double)
    End Sub
    Partial Private Sub OnWidthChanged()
    End Sub
    Partial Private Sub OnHeightChanging(value As Double)
    End Sub
    Partial Private Sub OnHeightChanged()
    End Sub
    Partial Private Sub OnReusableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnReusableChanged()
    End Sub
    Partial Private Sub OnWeightChanging(value As Double)
    End Sub
    Partial Private Sub OnWeightChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnRowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="containerID", Storage:="_ContainerID", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ContainerID() As String
		Get
			Return Me._ContainerID
		End Get
		Set
			If (String.Equals(Me._ContainerID, value) = false) Then
				Me.OnContainerIDChanging(value)
				Me.SendPropertyChanging
				Me._ContainerID = value
				Me.SendPropertyChanged("ContainerID")
				Me.OnContainerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="containerName", Storage:="_ContainerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ContainerName() As String
		Get
			Return Me._ContainerName
		End Get
		Set
			If (String.Equals(Me._ContainerName, value) = false) Then
				Me.OnContainerNameChanging(value)
				Me.SendPropertyChanging
				Me._ContainerName = value
				Me.SendPropertyChanged("ContainerName")
				Me.OnContainerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="containerDesc", Storage:="_ContainerDesc", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property ContainerDesc() As String
		Get
			Return Me._ContainerDesc
		End Get
		Set
			If (String.Equals(Me._ContainerDesc, value) = false) Then
				Me.OnContainerDescChanging(value)
				Me.SendPropertyChanging
				Me._ContainerDesc = value
				Me.SendPropertyChanged("ContainerDesc")
				Me.OnContainerDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="long", Storage:="_Long", DbType:="Float NOT NULL")>  _
	Public Property [Long]() As Double
		Get
			Return Me._Long
		End Get
		Set
			If ((Me._Long = value)  _
						= false) Then
				Me.OnLongChanging(value)
				Me.SendPropertyChanging
				Me._Long = value
				Me.SendPropertyChanged("[Long]")
				Me.OnLongChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="width", Storage:="_Width", DbType:="Float NOT NULL")>  _
	Public Property Width() As Double
		Get
			Return Me._Width
		End Get
		Set
			If ((Me._Width = value)  _
						= false) Then
				Me.OnWidthChanging(value)
				Me.SendPropertyChanging
				Me._Width = value
				Me.SendPropertyChanged("Width")
				Me.OnWidthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="height", Storage:="_Height", DbType:="Float NOT NULL")>  _
	Public Property Height() As Double
		Get
			Return Me._Height
		End Get
		Set
			If ((Me._Height = value)  _
						= false) Then
				Me.OnHeightChanging(value)
				Me.SendPropertyChanging
				Me._Height = value
				Me.SendPropertyChanged("Height")
				Me.OnHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="reusable", Storage:="_Reusable", DbType:="Bit NOT NULL")>  _
	Public Property Reusable() As Boolean
		Get
			Return Me._Reusable
		End Get
		Set
			If ((Me._Reusable = value)  _
						= false) Then
				Me.OnReusableChanging(value)
				Me.SendPropertyChanging
				Me._Reusable = value
				Me.SendPropertyChanged("Reusable")
				Me.OnReusableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="weight", Storage:="_Weight", DbType:="Float NOT NULL")>  _
	Public Property Weight() As Double
		Get
			Return Me._Weight
		End Get
		Set
			If ((Me._Weight = value)  _
						= false) Then
				Me.OnWeightChanging(value)
				Me.SendPropertyChanging
				Me._Weight = value
				Me.SendPropertyChanged("Weight")
				Me.OnWeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="status", Storage:="_Status", DbType:="Int NOT NULL")>  _
	Public Property Status() As Integer
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="rowguid", Storage:="_Rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property Rowguid() As System.Guid
		Get
			Return Me._Rowguid
		End Get
		Set
			If ((Me._Rowguid = value)  _
						= false) Then
				Me.OnRowguidChanging(value)
				Me.SendPropertyChanging
				Me._Rowguid = value
				Me.SendPropertyChanged("Rowguid")
				Me.OnRowguidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class CustomValidate
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ValidateId As System.Guid
	
	Private _ValidateName As String
	
	Private _ValidatePattern As String
	
	Private _PartNr As String
	
	Private _WrkstNr As String
	
	Private _Rowguid As System.Guid
	
	Private _Part As EntityRef(Of Part)
	
	Private _WorkStation As EntityRef(Of WorkStation)
	
    #Region "可扩展性方法定义"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnValidateIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnValidateIdChanged()
    End Sub
    Partial Private Sub OnValidateNameChanging(value As String)
    End Sub
    Partial Private Sub OnValidateNameChanged()
    End Sub
    Partial Private Sub OnValidatePatternChanging(value As String)
    End Sub
    Partial Private Sub OnValidatePatternChanged()
    End Sub
    Partial Private Sub OnPartNrChanging(value As String)
    End Sub
    Partial Private Sub OnPartNrChanged()
    End Sub
    Partial Private Sub OnWrkstNrChanging(value As String)
    End Sub
    Partial Private Sub OnWrkstNrChanged()
    End Sub
    Partial Private Sub OnRowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Part = CType(Nothing, EntityRef(Of Part))
		Me._WorkStation = CType(Nothing, EntityRef(Of WorkStation))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="validateId", Storage:="_ValidateId", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ValidateId() As System.Guid
		Get
			Return Me._ValidateId
		End Get
		Set
			If ((Me._ValidateId = value)  _
						= false) Then
				Me.OnValidateIdChanging(value)
				Me.SendPropertyChanging
				Me._ValidateId = value
				Me.SendPropertyChanged("ValidateId")
				Me.OnValidateIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="validateName", Storage:="_ValidateName", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property ValidateName() As String
		Get
			Return Me._ValidateName
		End Get
		Set
			If (String.Equals(Me._ValidateName, value) = false) Then
				Me.OnValidateNameChanging(value)
				Me.SendPropertyChanging
				Me._ValidateName = value
				Me.SendPropertyChanged("ValidateName")
				Me.OnValidateNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="validatePattern", Storage:="_ValidatePattern", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property ValidatePattern() As String
		Get
			Return Me._ValidatePattern
		End Get
		Set
			If (String.Equals(Me._ValidatePattern, value) = false) Then
				Me.OnValidatePatternChanging(value)
				Me.SendPropertyChanging
				Me._ValidatePattern = value
				Me.SendPropertyChanged("ValidatePattern")
				Me.OnValidatePatternChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="partNr", Storage:="_PartNr", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PartNr() As String
		Get
			Return Me._PartNr
		End Get
		Set
			If (String.Equals(Me._PartNr, value) = false) Then
				Me.OnPartNrChanging(value)
				Me.SendPropertyChanging
				Me._PartNr = value
				Me.SendPropertyChanged("PartNr")
				Me.OnPartNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="wrkstNr", Storage:="_WrkstNr", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property WrkstNr() As String
		Get
			Return Me._WrkstNr
		End Get
		Set
			If (String.Equals(Me._WrkstNr, value) = false) Then
				Me.OnWrkstNrChanging(value)
				Me.SendPropertyChanging
				Me._WrkstNr = value
				Me.SendPropertyChanged("WrkstNr")
				Me.OnWrkstNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="rowguid", Storage:="_Rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property Rowguid() As System.Guid
		Get
			Return Me._Rowguid
		End Get
		Set
			If ((Me._Rowguid = value)  _
						= false) Then
				Me.OnRowguidChanging(value)
				Me.SendPropertyChanging
				Me._Rowguid = value
				Me.SendPropertyChanged("Rowguid")
				Me.OnRowguidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Part_CustomValidate", Storage:="_Part", ThisKey:="PartNr", OtherKey:="PartNr", IsForeignKey:=true)>  _
	Public Property Part() As Part
		Get
			Return Me._Part.Entity
		End Get
		Set
			Dim previousValue As Part = Me._Part.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Part.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Part.Entity = Nothing
					previousValue.CustomValidates.Remove(Me)
				End If
				Me._Part.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.CustomValidates.Add(Me)
					Me._PartNr = value.PartNr
				Else
					Me._PartNr = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Part")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WorkStation_CustomValidate", Storage:="_WorkStation", ThisKey:="WrkstNr", OtherKey:="WrkStnID", IsForeignKey:=true)>  _
	Public Property WorkStation() As WorkStation
		Get
			Return Me._WorkStation.Entity
		End Get
		Set
			Dim previousValue As WorkStation = Me._WorkStation.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WorkStation.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WorkStation.Entity = Nothing
					previousValue.CustomValidates.Remove(Me)
				End If
				Me._WorkStation.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.CustomValidates.Add(Me)
					Me._WrkstNr = value.WrkStnID
				Else
					Me._WrkstNr = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WorkStation")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class Part
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PartNr As String
	
	Private _PartName As String
	
	Private _CustomerPartNr As String
	
	Private _ProjectID As String
	
	Private _CustomerPCR As String
	
	Private _Rowguid As System.Guid
	
	Private _CustomValidates As EntitySet(Of CustomValidate)
	
	Private _PartAllowedSecs As EntitySet(Of PartAllowedSec)
	
	Private _PartContainerLabels As EntitySet(Of PartContainerLabel)
	
	Private _SinglePackages As EntitySet(Of SinglePackage)
	
	Private _SourceBarcodes As EntitySet(Of SourceBarcode)
	
	Private _Project As EntityRef(Of Project)
	
    #Region "可扩展性方法定义"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPartNrChanging(value As String)
    End Sub
    Partial Private Sub OnPartNrChanged()
    End Sub
    Partial Private Sub OnPartNameChanging(value As String)
    End Sub
    Partial Private Sub OnPartNameChanged()
    End Sub
    Partial Private Sub OnCustomerPartNrChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerPartNrChanged()
    End Sub
    Partial Private Sub OnProjectIDChanging(value As String)
    End Sub
    Partial Private Sub OnProjectIDChanged()
    End Sub
    Partial Private Sub OnCustomerPCRChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerPCRChanged()
    End Sub
    Partial Private Sub OnRowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._CustomValidates = New EntitySet(Of CustomValidate)(AddressOf Me.attach_CustomValidates, AddressOf Me.detach_CustomValidates)
		Me._PartAllowedSecs = New EntitySet(Of PartAllowedSec)(AddressOf Me.attach_PartAllowedSecs, AddressOf Me.detach_PartAllowedSecs)
		Me._PartContainerLabels = New EntitySet(Of PartContainerLabel)(AddressOf Me.attach_PartContainerLabels, AddressOf Me.detach_PartContainerLabels)
		Me._SinglePackages = New EntitySet(Of SinglePackage)(AddressOf Me.attach_SinglePackages, AddressOf Me.detach_SinglePackages)
		Me._SourceBarcodes = New EntitySet(Of SourceBarcode)(AddressOf Me.attach_SourceBarcodes, AddressOf Me.detach_SourceBarcodes)
		Me._Project = CType(Nothing, EntityRef(Of Project))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="partNr", Storage:="_PartNr", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PartNr() As String
		Get
			Return Me._PartNr
		End Get
		Set
			If (String.Equals(Me._PartNr, value) = false) Then
				Me.OnPartNrChanging(value)
				Me.SendPropertyChanging
				Me._PartNr = value
				Me.SendPropertyChanged("PartNr")
				Me.OnPartNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="partName", Storage:="_PartName", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PartName() As String
		Get
			Return Me._PartName
		End Get
		Set
			If (String.Equals(Me._PartName, value) = false) Then
				Me.OnPartNameChanging(value)
				Me.SendPropertyChanging
				Me._PartName = value
				Me.SendPropertyChanged("PartName")
				Me.OnPartNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="customerPartNr", Storage:="_CustomerPartNr", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property CustomerPartNr() As String
		Get
			Return Me._CustomerPartNr
		End Get
		Set
			If (String.Equals(Me._CustomerPartNr, value) = false) Then
				Me.OnCustomerPartNrChanging(value)
				Me.SendPropertyChanging
				Me._CustomerPartNr = value
				Me.SendPropertyChanged("CustomerPartNr")
				Me.OnCustomerPartNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="projectID", Storage:="_ProjectID", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property ProjectID() As String
		Get
			Return Me._ProjectID
		End Get
		Set
			If (String.Equals(Me._ProjectID, value) = false) Then
				Me.OnProjectIDChanging(value)
				Me.SendPropertyChanging
				Me._ProjectID = value
				Me.SendPropertyChanged("ProjectID")
				Me.OnProjectIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="customerPCR", Storage:="_CustomerPCR", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property CustomerPCR() As String
		Get
			Return Me._CustomerPCR
		End Get
		Set
			If (String.Equals(Me._CustomerPCR, value) = false) Then
				Me.OnCustomerPCRChanging(value)
				Me.SendPropertyChanging
				Me._CustomerPCR = value
				Me.SendPropertyChanged("CustomerPCR")
				Me.OnCustomerPCRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="rowguid", Storage:="_Rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property Rowguid() As System.Guid
		Get
			Return Me._Rowguid
		End Get
		Set
			If ((Me._Rowguid = value)  _
						= false) Then
				Me.OnRowguidChanging(value)
				Me.SendPropertyChanging
				Me._Rowguid = value
				Me.SendPropertyChanged("Rowguid")
				Me.OnRowguidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Part_CustomValidate", Storage:="_CustomValidates", ThisKey:="PartNr", OtherKey:="PartNr")>  _
	Public Property CustomValidates() As EntitySet(Of CustomValidate)
		Get
			Return Me._CustomValidates
		End Get
		Set
			Me._CustomValidates.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Part_PartAllowedSec", Storage:="_PartAllowedSecs", ThisKey:="PartNr", OtherKey:="PartNr")>  _
	Public Property PartAllowedSecs() As EntitySet(Of PartAllowedSec)
		Get
			Return Me._PartAllowedSecs
		End Get
		Set
			Me._PartAllowedSecs.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Part_PartContainerLabel", Storage:="_PartContainerLabels", ThisKey:="PartNr", OtherKey:="PartNr")>  _
	Public Property PartContainerLabels() As EntitySet(Of PartContainerLabel)
		Get
			Return Me._PartContainerLabels
		End Get
		Set
			Me._PartContainerLabels.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Part_SinglePackage", Storage:="_SinglePackages", ThisKey:="PartNr", OtherKey:="PartNr")>  _
	Public Property SinglePackages() As EntitySet(Of SinglePackage)
		Get
			Return Me._SinglePackages
		End Get
		Set
			Me._SinglePackages.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Part_SourceBarcode", Storage:="_SourceBarcodes", ThisKey:="PartNr", OtherKey:="PartNr")>  _
	Public Property SourceBarcodes() As EntitySet(Of SourceBarcode)
		Get
			Return Me._SourceBarcodes
		End Get
		Set
			Me._SourceBarcodes.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Project_Part", Storage:="_Project", ThisKey:="ProjectID", OtherKey:="ProjectID", IsForeignKey:=true)>  _
	Public Property Project() As Project
		Get
			Return Me._Project.Entity
		End Get
		Set
			Dim previousValue As Project = Me._Project.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Project.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Project.Entity = Nothing
					previousValue.Parts.Remove(Me)
				End If
				Me._Project.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Parts.Add(Me)
					Me._ProjectID = value.ProjectID
				Else
					Me._ProjectID = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Project")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_CustomValidates(ByVal entity As CustomValidate)
		Me.SendPropertyChanging
		entity.Part = Me
	End Sub
	
	Private Sub detach_CustomValidates(ByVal entity As CustomValidate)
		Me.SendPropertyChanging
		entity.Part = Nothing
	End Sub
	
	Private Sub attach_PartAllowedSecs(ByVal entity As PartAllowedSec)
		Me.SendPropertyChanging
		entity.Part = Me
	End Sub
	
	Private Sub detach_PartAllowedSecs(ByVal entity As PartAllowedSec)
		Me.SendPropertyChanging
		entity.Part = Nothing
	End Sub
	
	Private Sub attach_PartContainerLabels(ByVal entity As PartContainerLabel)
		Me.SendPropertyChanging
		entity.Part = Me
	End Sub
	
	Private Sub detach_PartContainerLabels(ByVal entity As PartContainerLabel)
		Me.SendPropertyChanging
		entity.Part = Nothing
	End Sub
	
	Private Sub attach_SinglePackages(ByVal entity As SinglePackage)
		Me.SendPropertyChanging
		entity.Part = Me
	End Sub
	
	Private Sub detach_SinglePackages(ByVal entity As SinglePackage)
		Me.SendPropertyChanging
		entity.Part = Nothing
	End Sub
	
	Private Sub attach_SourceBarcodes(ByVal entity As SourceBarcode)
		Me.SendPropertyChanging
		entity.Part = Me
	End Sub
	
	Private Sub detach_SourceBarcodes(ByVal entity As SourceBarcode)
		Me.SendPropertyChanging
		entity.Part = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class PartAllowedSec
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RelId As Integer
	
	Private _Wrkstnr As String
	
	Private _PartNr As String
	
	Private _Sec As Integer
	
	Private _Rowguid As System.Guid
	
	Private _Part As EntityRef(Of Part)
	
	Private _WorkStation As EntityRef(Of WorkStation)
	
    #Region "可扩展性方法定义"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRelIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnRelIdChanged()
    End Sub
    Partial Private Sub OnWrkstnrChanging(value As String)
    End Sub
    Partial Private Sub OnWrkstnrChanged()
    End Sub
    Partial Private Sub OnPartNrChanging(value As String)
    End Sub
    Partial Private Sub OnPartNrChanged()
    End Sub
    Partial Private Sub OnSecChanging(value As Integer)
    End Sub
    Partial Private Sub OnSecChanged()
    End Sub
    Partial Private Sub OnRowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Part = CType(Nothing, EntityRef(Of Part))
		Me._WorkStation = CType(Nothing, EntityRef(Of WorkStation))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="relId", Storage:="_RelId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RelId() As Integer
		Get
			Return Me._RelId
		End Get
		Set
			If ((Me._RelId = value)  _
						= false) Then
				Me.OnRelIdChanging(value)
				Me.SendPropertyChanging
				Me._RelId = value
				Me.SendPropertyChanged("RelId")
				Me.OnRelIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="wrkstnr", Storage:="_Wrkstnr", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property Wrkstnr() As String
		Get
			Return Me._Wrkstnr
		End Get
		Set
			If (String.Equals(Me._Wrkstnr, value) = false) Then
				Me.OnWrkstnrChanging(value)
				Me.SendPropertyChanging
				Me._Wrkstnr = value
				Me.SendPropertyChanged("Wrkstnr")
				Me.OnWrkstnrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="partNr", Storage:="_PartNr", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PartNr() As String
		Get
			Return Me._PartNr
		End Get
		Set
			If (String.Equals(Me._PartNr, value) = false) Then
				Me.OnPartNrChanging(value)
				Me.SendPropertyChanging
				Me._PartNr = value
				Me.SendPropertyChanged("PartNr")
				Me.OnPartNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="sec", Storage:="_Sec", DbType:="Int NOT NULL")>  _
	Public Property Sec() As Integer
		Get
			Return Me._Sec
		End Get
		Set
			If ((Me._Sec = value)  _
						= false) Then
				Me.OnSecChanging(value)
				Me.SendPropertyChanging
				Me._Sec = value
				Me.SendPropertyChanged("Sec")
				Me.OnSecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="rowguid", Storage:="_Rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property Rowguid() As System.Guid
		Get
			Return Me._Rowguid
		End Get
		Set
			If ((Me._Rowguid = value)  _
						= false) Then
				Me.OnRowguidChanging(value)
				Me.SendPropertyChanging
				Me._Rowguid = value
				Me.SendPropertyChanged("Rowguid")
				Me.OnRowguidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Part_PartAllowedSec", Storage:="_Part", ThisKey:="PartNr", OtherKey:="PartNr", IsForeignKey:=true)>  _
	Public Property Part() As Part
		Get
			Return Me._Part.Entity
		End Get
		Set
			Dim previousValue As Part = Me._Part.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Part.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Part.Entity = Nothing
					previousValue.PartAllowedSecs.Remove(Me)
				End If
				Me._Part.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.PartAllowedSecs.Add(Me)
					Me._PartNr = value.PartNr
				Else
					Me._PartNr = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Part")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WorkStation_PartAllowedSec", Storage:="_WorkStation", ThisKey:="Wrkstnr", OtherKey:="WrkStnID", IsForeignKey:=true)>  _
	Public Property WorkStation() As WorkStation
		Get
			Return Me._WorkStation.Entity
		End Get
		Set
			Dim previousValue As WorkStation = Me._WorkStation.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WorkStation.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WorkStation.Entity = Nothing
					previousValue.PartAllowedSecs.Remove(Me)
				End If
				Me._WorkStation.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.PartAllowedSecs.Add(Me)
					Me._Wrkstnr = value.WrkStnID
				Else
					Me._Wrkstnr = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WorkStation")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class PartContainerLabel
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RelID As Integer
	
	Private _PartNr As String
	
	Private _LabelTemplateName As String
	
	Private _LabelTeplateFile As String
	
	Private _LabelType As Integer
	
	Private _Piece As Byte
	
	Private _Rowguid As System.Guid
	
	Private _Part As EntityRef(Of Part)
	
    #Region "可扩展性方法定义"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRelIDChanged()
    End Sub
    Partial Private Sub OnPartNrChanging(value As String)
    End Sub
    Partial Private Sub OnPartNrChanged()
    End Sub
    Partial Private Sub OnLabelTemplateNameChanging(value As String)
    End Sub
    Partial Private Sub OnLabelTemplateNameChanged()
    End Sub
    Partial Private Sub OnLabelTeplateFileChanging(value As String)
    End Sub
    Partial Private Sub OnLabelTeplateFileChanged()
    End Sub
    Partial Private Sub OnLabelTypeChanging(value As Integer)
    End Sub
    Partial Private Sub OnLabelTypeChanged()
    End Sub
    Partial Private Sub OnPieceChanging(value As Byte)
    End Sub
    Partial Private Sub OnPieceChanged()
    End Sub
    Partial Private Sub OnRowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Part = CType(Nothing, EntityRef(Of Part))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="relID", Storage:="_RelID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RelID() As Integer
		Get
			Return Me._RelID
		End Get
		Set
			If ((Me._RelID = value)  _
						= false) Then
				Me.OnRelIDChanging(value)
				Me.SendPropertyChanging
				Me._RelID = value
				Me.SendPropertyChanged("RelID")
				Me.OnRelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="partNr", Storage:="_PartNr", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PartNr() As String
		Get
			Return Me._PartNr
		End Get
		Set
			If (String.Equals(Me._PartNr, value) = false) Then
				Me.OnPartNrChanging(value)
				Me.SendPropertyChanging
				Me._PartNr = value
				Me.SendPropertyChanged("PartNr")
				Me.OnPartNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="labelTemplateName", Storage:="_LabelTemplateName", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property LabelTemplateName() As String
		Get
			Return Me._LabelTemplateName
		End Get
		Set
			If (String.Equals(Me._LabelTemplateName, value) = false) Then
				Me.OnLabelTemplateNameChanging(value)
				Me.SendPropertyChanging
				Me._LabelTemplateName = value
				Me.SendPropertyChanged("LabelTemplateName")
				Me.OnLabelTemplateNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="labelTeplateFile", Storage:="_LabelTeplateFile", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property LabelTeplateFile() As String
		Get
			Return Me._LabelTeplateFile
		End Get
		Set
			If (String.Equals(Me._LabelTeplateFile, value) = false) Then
				Me.OnLabelTeplateFileChanging(value)
				Me.SendPropertyChanging
				Me._LabelTeplateFile = value
				Me.SendPropertyChanged("LabelTeplateFile")
				Me.OnLabelTeplateFileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="labelType", Storage:="_LabelType", DbType:="Int NOT NULL")>  _
	Public Property LabelType() As Integer
		Get
			Return Me._LabelType
		End Get
		Set
			If ((Me._LabelType = value)  _
						= false) Then
				Me.OnLabelTypeChanging(value)
				Me.SendPropertyChanging
				Me._LabelType = value
				Me.SendPropertyChanged("LabelType")
				Me.OnLabelTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="piece", Storage:="_Piece", DbType:="TinyInt NOT NULL")>  _
	Public Property Piece() As Byte
		Get
			Return Me._Piece
		End Get
		Set
			If ((Me._Piece = value)  _
						= false) Then
				Me.OnPieceChanging(value)
				Me.SendPropertyChanging
				Me._Piece = value
				Me.SendPropertyChanged("Piece")
				Me.OnPieceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="rowguid", Storage:="_Rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property Rowguid() As System.Guid
		Get
			Return Me._Rowguid
		End Get
		Set
			If ((Me._Rowguid = value)  _
						= false) Then
				Me.OnRowguidChanging(value)
				Me.SendPropertyChanging
				Me._Rowguid = value
				Me.SendPropertyChanged("Rowguid")
				Me.OnRowguidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Part_PartContainerLabel", Storage:="_Part", ThisKey:="PartNr", OtherKey:="PartNr", IsForeignKey:=true)>  _
	Public Property Part() As Part
		Get
			Return Me._Part.Entity
		End Get
		Set
			Dim previousValue As Part = Me._Part.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Part.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Part.Entity = Nothing
					previousValue.PartContainerLabels.Remove(Me)
				End If
				Me._Part.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.PartContainerLabels.Add(Me)
					Me._PartNr = value.PartNr
				Else
					Me._PartNr = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Part")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class ProdLine
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ProdLineID As String
	
	Private _ProdLineName As String
	
	Private _ProjectID As String
	
	Private _Rowguid As System.Guid
	
	Private _WorkStations As EntitySet(Of WorkStation)
	
	Private _Project As EntityRef(Of Project)
	
    #Region "可扩展性方法定义"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProdLineIDChanging(value As String)
    End Sub
    Partial Private Sub OnProdLineIDChanged()
    End Sub
    Partial Private Sub OnProdLineNameChanging(value As String)
    End Sub
    Partial Private Sub OnProdLineNameChanged()
    End Sub
    Partial Private Sub OnProjectIDChanging(value As String)
    End Sub
    Partial Private Sub OnProjectIDChanged()
    End Sub
    Partial Private Sub OnRowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WorkStations = New EntitySet(Of WorkStation)(AddressOf Me.attach_WorkStations, AddressOf Me.detach_WorkStations)
		Me._Project = CType(Nothing, EntityRef(Of Project))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="prodLineID", Storage:="_ProdLineID", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ProdLineID() As String
		Get
			Return Me._ProdLineID
		End Get
		Set
			If (String.Equals(Me._ProdLineID, value) = false) Then
				Me.OnProdLineIDChanging(value)
				Me.SendPropertyChanging
				Me._ProdLineID = value
				Me.SendPropertyChanged("ProdLineID")
				Me.OnProdLineIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="prodLineName", Storage:="_ProdLineName", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property ProdLineName() As String
		Get
			Return Me._ProdLineName
		End Get
		Set
			If (String.Equals(Me._ProdLineName, value) = false) Then
				Me.OnProdLineNameChanging(value)
				Me.SendPropertyChanging
				Me._ProdLineName = value
				Me.SendPropertyChanged("ProdLineName")
				Me.OnProdLineNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="projectID", Storage:="_ProjectID", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property ProjectID() As String
		Get
			Return Me._ProjectID
		End Get
		Set
			If (String.Equals(Me._ProjectID, value) = false) Then
				Me.OnProjectIDChanging(value)
				Me.SendPropertyChanging
				Me._ProjectID = value
				Me.SendPropertyChanged("ProjectID")
				Me.OnProjectIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="rowguid", Storage:="_Rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property Rowguid() As System.Guid
		Get
			Return Me._Rowguid
		End Get
		Set
			If ((Me._Rowguid = value)  _
						= false) Then
				Me.OnRowguidChanging(value)
				Me.SendPropertyChanging
				Me._Rowguid = value
				Me.SendPropertyChanged("Rowguid")
				Me.OnRowguidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ProdLine_WorkStation", Storage:="_WorkStations", ThisKey:="ProdLineID", OtherKey:="ProdLineID")>  _
	Public Property WorkStations() As EntitySet(Of WorkStation)
		Get
			Return Me._WorkStations
		End Get
		Set
			Me._WorkStations.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Project_ProdLine", Storage:="_Project", ThisKey:="ProjectID", OtherKey:="ProjectID", IsForeignKey:=true)>  _
	Public Property Project() As Project
		Get
			Return Me._Project.Entity
		End Get
		Set
			Dim previousValue As Project = Me._Project.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Project.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Project.Entity = Nothing
					previousValue.ProdLines.Remove(Me)
				End If
				Me._Project.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ProdLines.Add(Me)
					Me._ProjectID = value.ProjectID
				Else
					Me._ProjectID = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Project")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_WorkStations(ByVal entity As WorkStation)
		Me.SendPropertyChanging
		entity.ProdLine = Me
	End Sub
	
	Private Sub detach_WorkStations(ByVal entity As WorkStation)
		Me.SendPropertyChanging
		entity.ProdLine = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class Project
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ProjectID As String
	
	Private _ProjectName As String
	
	Private _Rowguid As System.Guid
	
	Private _Parts As EntitySet(Of Part)
	
	Private _ProdLines As EntitySet(Of ProdLine)
	
    #Region "可扩展性方法定义"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProjectIDChanging(value As String)
    End Sub
    Partial Private Sub OnProjectIDChanged()
    End Sub
    Partial Private Sub OnProjectNameChanging(value As String)
    End Sub
    Partial Private Sub OnProjectNameChanged()
    End Sub
    Partial Private Sub OnRowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Parts = New EntitySet(Of Part)(AddressOf Me.attach_Parts, AddressOf Me.detach_Parts)
		Me._ProdLines = New EntitySet(Of ProdLine)(AddressOf Me.attach_ProdLines, AddressOf Me.detach_ProdLines)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="projectID", Storage:="_ProjectID", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ProjectID() As String
		Get
			Return Me._ProjectID
		End Get
		Set
			If (String.Equals(Me._ProjectID, value) = false) Then
				Me.OnProjectIDChanging(value)
				Me.SendPropertyChanging
				Me._ProjectID = value
				Me.SendPropertyChanged("ProjectID")
				Me.OnProjectIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="projectName", Storage:="_ProjectName", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property ProjectName() As String
		Get
			Return Me._ProjectName
		End Get
		Set
			If (String.Equals(Me._ProjectName, value) = false) Then
				Me.OnProjectNameChanging(value)
				Me.SendPropertyChanging
				Me._ProjectName = value
				Me.SendPropertyChanged("ProjectName")
				Me.OnProjectNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="rowguid", Storage:="_Rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property Rowguid() As System.Guid
		Get
			Return Me._Rowguid
		End Get
		Set
			If ((Me._Rowguid = value)  _
						= false) Then
				Me.OnRowguidChanging(value)
				Me.SendPropertyChanging
				Me._Rowguid = value
				Me.SendPropertyChanged("Rowguid")
				Me.OnRowguidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Project_Part", Storage:="_Parts", ThisKey:="ProjectID", OtherKey:="ProjectID")>  _
	Public Property Parts() As EntitySet(Of Part)
		Get
			Return Me._Parts
		End Get
		Set
			Me._Parts.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Project_ProdLine", Storage:="_ProdLines", ThisKey:="ProjectID", OtherKey:="ProjectID")>  _
	Public Property ProdLines() As EntitySet(Of ProdLine)
		Get
			Return Me._ProdLines
		End Get
		Set
			Me._ProdLines.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Parts(ByVal entity As Part)
		Me.SendPropertyChanging
		entity.Project = Me
	End Sub
	
	Private Sub detach_Parts(ByVal entity As Part)
		Me.SendPropertyChanging
		entity.Project = Nothing
	End Sub
	
	Private Sub attach_ProdLines(ByVal entity As ProdLine)
		Me.SendPropertyChanging
		entity.Project = Me
	End Sub
	
	Private Sub detach_ProdLines(ByVal entity As ProdLine)
		Me.SendPropertyChanging
		entity.Project = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class SinglePackage
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PackageID As String
	
	Private _Capa As Integer
	
	Private _Status As Byte
	
	Private _ContainerID As String
	
	Private _PlanedDate As String
	
	Private _PartNr As String
	
	Private _WrkstnID As String
	
	Private _Rowguid As System.Guid
	
	Private _Part As EntityRef(Of Part)
	
	Private _WorkStation As EntityRef(Of WorkStation)
	
    #Region "可扩展性方法定义"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPackageIDChanging(value As String)
    End Sub
    Partial Private Sub OnPackageIDChanged()
    End Sub
    Partial Private Sub OnCapaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCapaChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Byte)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnContainerIDChanging(value As String)
    End Sub
    Partial Private Sub OnContainerIDChanged()
    End Sub
    Partial Private Sub OnPlanedDateChanging(value As String)
    End Sub
    Partial Private Sub OnPlanedDateChanged()
    End Sub
    Partial Private Sub OnPartNrChanging(value As String)
    End Sub
    Partial Private Sub OnPartNrChanged()
    End Sub
    Partial Private Sub OnWrkstnIDChanging(value As String)
    End Sub
    Partial Private Sub OnWrkstnIDChanged()
    End Sub
    Partial Private Sub OnRowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Part = CType(Nothing, EntityRef(Of Part))
		Me._WorkStation = CType(Nothing, EntityRef(Of WorkStation))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="packageID", Storage:="_PackageID", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PackageID() As String
		Get
			Return Me._PackageID
		End Get
		Set
			If (String.Equals(Me._PackageID, value) = false) Then
				Me.OnPackageIDChanging(value)
				Me.SendPropertyChanging
				Me._PackageID = value
				Me.SendPropertyChanged("PackageID")
				Me.OnPackageIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="capa", Storage:="_Capa", DbType:="Int NOT NULL")>  _
	Public Property Capa() As Integer
		Get
			Return Me._Capa
		End Get
		Set
			If ((Me._Capa = value)  _
						= false) Then
				Me.OnCapaChanging(value)
				Me.SendPropertyChanging
				Me._Capa = value
				Me.SendPropertyChanged("Capa")
				Me.OnCapaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="status", Storage:="_Status", DbType:="TinyInt NOT NULL")>  _
	Public Property Status() As Byte
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="containerID", Storage:="_ContainerID", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property ContainerID() As String
		Get
			Return Me._ContainerID
		End Get
		Set
			If (String.Equals(Me._ContainerID, value) = false) Then
				Me.OnContainerIDChanging(value)
				Me.SendPropertyChanging
				Me._ContainerID = value
				Me.SendPropertyChanged("ContainerID")
				Me.OnContainerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="planedDate", Storage:="_PlanedDate", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property PlanedDate() As String
		Get
			Return Me._PlanedDate
		End Get
		Set
			If (String.Equals(Me._PlanedDate, value) = false) Then
				Me.OnPlanedDateChanging(value)
				Me.SendPropertyChanging
				Me._PlanedDate = value
				Me.SendPropertyChanged("PlanedDate")
				Me.OnPlanedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="partNr", Storage:="_PartNr", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PartNr() As String
		Get
			Return Me._PartNr
		End Get
		Set
			If (String.Equals(Me._PartNr, value) = false) Then
				Me.OnPartNrChanging(value)
				Me.SendPropertyChanging
				Me._PartNr = value
				Me.SendPropertyChanged("PartNr")
				Me.OnPartNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="wrkstnID", Storage:="_WrkstnID", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property WrkstnID() As String
		Get
			Return Me._WrkstnID
		End Get
		Set
			If (String.Equals(Me._WrkstnID, value) = false) Then
				Me.OnWrkstnIDChanging(value)
				Me.SendPropertyChanging
				Me._WrkstnID = value
				Me.SendPropertyChanged("WrkstnID")
				Me.OnWrkstnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="rowguid", Storage:="_Rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property Rowguid() As System.Guid
		Get
			Return Me._Rowguid
		End Get
		Set
			If ((Me._Rowguid = value)  _
						= false) Then
				Me.OnRowguidChanging(value)
				Me.SendPropertyChanging
				Me._Rowguid = value
				Me.SendPropertyChanged("Rowguid")
				Me.OnRowguidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Part_SinglePackage", Storage:="_Part", ThisKey:="PartNr", OtherKey:="PartNr", IsForeignKey:=true)>  _
	Public Property Part() As Part
		Get
			Return Me._Part.Entity
		End Get
		Set
			Dim previousValue As Part = Me._Part.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Part.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Part.Entity = Nothing
					previousValue.SinglePackages.Remove(Me)
				End If
				Me._Part.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.SinglePackages.Add(Me)
					Me._PartNr = value.PartNr
				Else
					Me._PartNr = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Part")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WorkStation_SinglePackage", Storage:="_WorkStation", ThisKey:="WrkstnID", OtherKey:="WrkStnID", IsForeignKey:=true)>  _
	Public Property WorkStation() As WorkStation
		Get
			Return Me._WorkStation.Entity
		End Get
		Set
			Dim previousValue As WorkStation = Me._WorkStation.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WorkStation.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WorkStation.Entity = Nothing
					previousValue.SinglePackages.Remove(Me)
				End If
				Me._WorkStation.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.SinglePackages.Add(Me)
					Me._WrkstnID = value.WrkStnID
				Else
					Me._WrkstnID = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WorkStation")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class SourceBarcode
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SourceID As Integer
	
	Private _PartNr As String
	
	Private _DefaultFixedText As String
	
	Private _FromPosition As Byte
	
	Private _Length As Byte
	
	Private _IsUniq As Boolean
	
	Private _Rowguid As System.Guid
	
	Private _Part As EntityRef(Of Part)
	
    #Region "可扩展性方法定义"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSourceIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSourceIDChanged()
    End Sub
    Partial Private Sub OnPartNrChanging(value As String)
    End Sub
    Partial Private Sub OnPartNrChanged()
    End Sub
    Partial Private Sub OnDefaultFixedTextChanging(value As String)
    End Sub
    Partial Private Sub OnDefaultFixedTextChanged()
    End Sub
    Partial Private Sub OnFromPositionChanging(value As Byte)
    End Sub
    Partial Private Sub OnFromPositionChanged()
    End Sub
    Partial Private Sub OnLengthChanging(value As Byte)
    End Sub
    Partial Private Sub OnLengthChanged()
    End Sub
    Partial Private Sub OnIsUniqChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsUniqChanged()
    End Sub
    Partial Private Sub OnRowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Part = CType(Nothing, EntityRef(Of Part))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="sourceID", Storage:="_SourceID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SourceID() As Integer
		Get
			Return Me._SourceID
		End Get
		Set
			If ((Me._SourceID = value)  _
						= false) Then
				Me.OnSourceIDChanging(value)
				Me.SendPropertyChanging
				Me._SourceID = value
				Me.SendPropertyChanged("SourceID")
				Me.OnSourceIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="partNr", Storage:="_PartNr", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PartNr() As String
		Get
			Return Me._PartNr
		End Get
		Set
			If (String.Equals(Me._PartNr, value) = false) Then
				Me.OnPartNrChanging(value)
				Me.SendPropertyChanging
				Me._PartNr = value
				Me.SendPropertyChanged("PartNr")
				Me.OnPartNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="defaultFixedText", Storage:="_DefaultFixedText", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property DefaultFixedText() As String
		Get
			Return Me._DefaultFixedText
		End Get
		Set
			If (String.Equals(Me._DefaultFixedText, value) = false) Then
				Me.OnDefaultFixedTextChanging(value)
				Me.SendPropertyChanging
				Me._DefaultFixedText = value
				Me.SendPropertyChanged("DefaultFixedText")
				Me.OnDefaultFixedTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="fromPosition", Storage:="_FromPosition", DbType:="TinyInt NOT NULL")>  _
	Public Property FromPosition() As Byte
		Get
			Return Me._FromPosition
		End Get
		Set
			If ((Me._FromPosition = value)  _
						= false) Then
				Me.OnFromPositionChanging(value)
				Me.SendPropertyChanging
				Me._FromPosition = value
				Me.SendPropertyChanged("FromPosition")
				Me.OnFromPositionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="length", Storage:="_Length", DbType:="TinyInt NOT NULL")>  _
	Public Property Length() As Byte
		Get
			Return Me._Length
		End Get
		Set
			If ((Me._Length = value)  _
						= false) Then
				Me.OnLengthChanging(value)
				Me.SendPropertyChanging
				Me._Length = value
				Me.SendPropertyChanged("Length")
				Me.OnLengthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="isUniq", Storage:="_IsUniq", DbType:="Bit NOT NULL")>  _
	Public Property IsUniq() As Boolean
		Get
			Return Me._IsUniq
		End Get
		Set
			If ((Me._IsUniq = value)  _
						= false) Then
				Me.OnIsUniqChanging(value)
				Me.SendPropertyChanging
				Me._IsUniq = value
				Me.SendPropertyChanged("IsUniq")
				Me.OnIsUniqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="rowguid", Storage:="_Rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property Rowguid() As System.Guid
		Get
			Return Me._Rowguid
		End Get
		Set
			If ((Me._Rowguid = value)  _
						= false) Then
				Me.OnRowguidChanging(value)
				Me.SendPropertyChanging
				Me._Rowguid = value
				Me.SendPropertyChanged("Rowguid")
				Me.OnRowguidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Part_SourceBarcode", Storage:="_Part", ThisKey:="PartNr", OtherKey:="PartNr", IsForeignKey:=true)>  _
	Public Property Part() As Part
		Get
			Return Me._Part.Entity
		End Get
		Set
			Dim previousValue As Part = Me._Part.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Part.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Part.Entity = Nothing
					previousValue.SourceBarcodes.Remove(Me)
				End If
				Me._Part.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.SourceBarcodes.Add(Me)
					Me._PartNr = value.PartNr
				Else
					Me._PartNr = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Part")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class WorkStation
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WrkStnID As String
	
	Private _WrkStnName As String
	
	Private _Status As Byte
	
	Private _ProdLineID As String
	
	Private _Rowguid As System.Guid
	
	Private _CustomValidates As EntitySet(Of CustomValidate)
	
	Private _PartAllowedSecs As EntitySet(Of PartAllowedSec)
	
	Private _SinglePackages As EntitySet(Of SinglePackage)
	
	Private _ProdLine As EntityRef(Of ProdLine)
	
    #Region "可扩展性方法定义"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWrkStnIDChanging(value As String)
    End Sub
    Partial Private Sub OnWrkStnIDChanged()
    End Sub
    Partial Private Sub OnWrkStnNameChanging(value As String)
    End Sub
    Partial Private Sub OnWrkStnNameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Byte)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnProdLineIDChanging(value As String)
    End Sub
    Partial Private Sub OnProdLineIDChanged()
    End Sub
    Partial Private Sub OnRowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._CustomValidates = New EntitySet(Of CustomValidate)(AddressOf Me.attach_CustomValidates, AddressOf Me.detach_CustomValidates)
		Me._PartAllowedSecs = New EntitySet(Of PartAllowedSec)(AddressOf Me.attach_PartAllowedSecs, AddressOf Me.detach_PartAllowedSecs)
		Me._SinglePackages = New EntitySet(Of SinglePackage)(AddressOf Me.attach_SinglePackages, AddressOf Me.detach_SinglePackages)
		Me._ProdLine = CType(Nothing, EntityRef(Of ProdLine))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="wrkStnID", Storage:="_WrkStnID", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property WrkStnID() As String
		Get
			Return Me._WrkStnID
		End Get
		Set
			If (String.Equals(Me._WrkStnID, value) = false) Then
				Me.OnWrkStnIDChanging(value)
				Me.SendPropertyChanging
				Me._WrkStnID = value
				Me.SendPropertyChanged("WrkStnID")
				Me.OnWrkStnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="wrkStnName", Storage:="_WrkStnName", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property WrkStnName() As String
		Get
			Return Me._WrkStnName
		End Get
		Set
			If (String.Equals(Me._WrkStnName, value) = false) Then
				Me.OnWrkStnNameChanging(value)
				Me.SendPropertyChanging
				Me._WrkStnName = value
				Me.SendPropertyChanged("WrkStnName")
				Me.OnWrkStnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="status", Storage:="_Status", DbType:="TinyInt NOT NULL")>  _
	Public Property Status() As Byte
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="prodLineID", Storage:="_ProdLineID", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property ProdLineID() As String
		Get
			Return Me._ProdLineID
		End Get
		Set
			If (String.Equals(Me._ProdLineID, value) = false) Then
				Me.OnProdLineIDChanging(value)
				Me.SendPropertyChanging
				Me._ProdLineID = value
				Me.SendPropertyChanged("ProdLineID")
				Me.OnProdLineIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="rowguid", Storage:="_Rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property Rowguid() As System.Guid
		Get
			Return Me._Rowguid
		End Get
		Set
			If ((Me._Rowguid = value)  _
						= false) Then
				Me.OnRowguidChanging(value)
				Me.SendPropertyChanging
				Me._Rowguid = value
				Me.SendPropertyChanged("Rowguid")
				Me.OnRowguidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WorkStation_CustomValidate", Storage:="_CustomValidates", ThisKey:="WrkStnID", OtherKey:="WrkstNr")>  _
	Public Property CustomValidates() As EntitySet(Of CustomValidate)
		Get
			Return Me._CustomValidates
		End Get
		Set
			Me._CustomValidates.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WorkStation_PartAllowedSec", Storage:="_PartAllowedSecs", ThisKey:="WrkStnID", OtherKey:="Wrkstnr")>  _
	Public Property PartAllowedSecs() As EntitySet(Of PartAllowedSec)
		Get
			Return Me._PartAllowedSecs
		End Get
		Set
			Me._PartAllowedSecs.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WorkStation_SinglePackage", Storage:="_SinglePackages", ThisKey:="WrkStnID", OtherKey:="WrkstnID")>  _
	Public Property SinglePackages() As EntitySet(Of SinglePackage)
		Get
			Return Me._SinglePackages
		End Get
		Set
			Me._SinglePackages.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ProdLine_WorkStation", Storage:="_ProdLine", ThisKey:="ProdLineID", OtherKey:="ProdLineID", IsForeignKey:=true)>  _
	Public Property ProdLine() As ProdLine
		Get
			Return Me._ProdLine.Entity
		End Get
		Set
			Dim previousValue As ProdLine = Me._ProdLine.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ProdLine.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ProdLine.Entity = Nothing
					previousValue.WorkStations.Remove(Me)
				End If
				Me._ProdLine.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WorkStations.Add(Me)
					Me._ProdLineID = value.ProdLineID
				Else
					Me._ProdLineID = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("ProdLine")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_CustomValidates(ByVal entity As CustomValidate)
		Me.SendPropertyChanging
		entity.WorkStation = Me
	End Sub
	
	Private Sub detach_CustomValidates(ByVal entity As CustomValidate)
		Me.SendPropertyChanging
		entity.WorkStation = Nothing
	End Sub
	
	Private Sub attach_PartAllowedSecs(ByVal entity As PartAllowedSec)
		Me.SendPropertyChanging
		entity.WorkStation = Me
	End Sub
	
	Private Sub detach_PartAllowedSecs(ByVal entity As PartAllowedSec)
		Me.SendPropertyChanging
		entity.WorkStation = Nothing
	End Sub
	
	Private Sub attach_SinglePackages(ByVal entity As SinglePackage)
		Me.SendPropertyChanging
		entity.WorkStation = Me
	End Sub
	
	Private Sub detach_SinglePackages(ByVal entity As SinglePackage)
		Me.SendPropertyChanging
		entity.WorkStation = Nothing
	End Sub
End Class
